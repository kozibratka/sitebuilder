# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.domain: '%env(APP_DOMAIN)%'
    app.port: '%env(PUBLIC_SERVER_PORT)%'
    app.email_no_reply: 'noreply@%app.domain%'
    app.date_time_format: 'd.m.Y H:i:s'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\RequestJsonToArrayListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    App\EventListener\Doctrine\UserPasswordEncodeListener:
        tags:
            -
                name: doctrine.orm.entity_listener
                event: prePersist
                entity: 'App\Entity\User'

    App\EventListener\Doctrine\PageBuilder\PluginResolveIdentifierListener:
        tags:
            -
                name: doctrine.orm.entity_listener
                event: postLoad
                entity: 'App\Entity\Plugin\BasePlugin'

    App\EventListener\Doctrine\PageBuilder\PaletteGridItemListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: preRemove, entity: 'App\Entity\SiteBuilder\PaletteGridItem' }
            - { name: doctrine.orm.entity_listener, event: preUpdate, entity: 'App\Entity\SiteBuilder\PaletteGridItem' }

    App\EventListener\Doctrine\PageBuilder\GridCellItemListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: preRemove, entity: 'App\Entity\SiteBuilder\GridCellItem' }
            - { name: doctrine.orm.entity_listener, event: preUpdate, entity: 'App\Entity\SiteBuilder\GridCellItem' }

    App\EventListener\Doctrine\PageBuilder\GridCellListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: preRemove, entity: 'App\Entity\SiteBuilder\GridCell' }

    App\EventListener\Doctrine\PageListener:
        tags:
            - {name: doctrine.orm.entity_listener, event: 'prePersist', entity: 'App\Entity\Page\Page'}
            - {name: doctrine.orm.entity_listener, event: 'preRemove', entity: 'App\Entity\Page\Page'}
            - {name: 'doctrine.event_listener', event: 'onFlush'}

    App\EventListener\Doctrine\PageBuilder\BasePluginListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist, entity: 'App\Entity\SiteBuilder\Plugin\BasePlugin' }
            - { name: doctrine.orm.entity_listener, event: preUpdate, entity: 'App\Entity\SiteBuilder\Plugin\BasePlugin' }

    App\Service\Plugin\Text\TextService:
        tags:
            - { name: 'plugin_service', key: 'text_v1' }

    App\Service\Plugin\Carousel\CarouselService:
        tags:
            - { name: 'plugin_service', key: 'carousel_v1' }

    App\Service\Plugin\Menu\MenuService:
        tags:
            - { name: 'plugin_service', key: 'menu_v1' }

    App\Service\Plugin\Image\ImageService:
        tags:
            - { name: 'plugin_service', key: 'image_v1' }

    App\Service\Plugin\Video\VideoService:
        tags:
            - { name: 'plugin_service', key: 'video_v1' }

    App\Service\Plugin\Form\FormService:
        tags:
            - { name: 'plugin_service', key: 'form_v1' }

    App\Service\Plugin\PluginServiceService:
        arguments: [!tagged { tag: 'plugin_service', index_by: 'key' }]

    App\Form\SiteBuilder\EventSubscriber\AddPluginFieldSubscriber:
        arguments: [!tagged { tag: 'plugin_service', index_by: 'key' }]

    App\EventListener\Doctrine\PageBuilder\Plugin\FormListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postLoad, entity: 'App\Entity\SiteBuilder\Plugin\Form\PluginForm' }

    Predis\Client:
        arguments:
            - host: '%env(REDIS_HOST)%'
            - port: '%env(int:REDIS_PORT)%'
